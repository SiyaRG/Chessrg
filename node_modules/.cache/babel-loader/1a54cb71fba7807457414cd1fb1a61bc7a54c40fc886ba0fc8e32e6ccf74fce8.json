{"ast":null,"code":"var _jsxFileName = \"/data/data/com.termux/files/home/storage/projects/siya-app/src/Components/SearchInfo.jsx\";\nimport React from \"react\";\nimport { Form, Row, Col } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchInfo = ({\n  algorithm\n}) => {\n  return /*#__PURE__*/_jsxDEV(Form, {\n    className: \"text-center\",\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      className: \"d-flex justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: /*#__PURE__*/_jsxDEV(Form.Text, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Depth First Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 10,\n            columnNumber: 7\n          }, this), \" or \\\"DFS\\\" is a kind of tree traversal algorithm that visits every node in a branch before it's siblings.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"d-flex justify-content-center\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Form.Text, {\n          children: [\"Time Complexity: \", algorithm.timeComplexity]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Form.Text, {\n          children: [\"Space Complexity: \", algorithm.spaceComplexity]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Form.Text, {\n          children: [\"Traversal Type: \", algorithm.traversalType]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 3\n  }, this);\n};\n_c = SearchInfo;\nexport default SearchInfo;\nvar _c;\n$RefreshReg$(_c, \"SearchInfo\");","map":{"version":3,"names":["React","Form","Row","Col","jsxDEV","_jsxDEV","SearchInfo","algorithm","className","children","Group","Text","fileName","_jsxFileName","lineNumber","columnNumber","timeComplexity","spaceComplexity","traversalType","_c","$RefreshReg$"],"sources":["/data/data/com.termux/files/home/storage/projects/siya-app/src/Components/SearchInfo.jsx"],"sourcesContent":["import React from \"react\";\nimport { Form, Row, Col } from \"react-bootstrap\";\n\nconst SearchInfo = ({algorithm}) => {\n\treturn (\n\t\t<Form className=\"text-center\">\n\t\t\t<Row className=\"d-flex justify-content-center\">\n\t\t\t\t<Form.Group>\n\t\t\t\t\t<Form.Text>\n\t\t\t\t\t\t<span>Depth First Search</span> or \"DFS\" is a kind of\n\t\t\t\t\t\ttree traversal algorithm that visits every node in a\n\t\t\t\t\t\tbranch before it's siblings.\n\t\t\t\t\t</Form.Text>\n\t\t\t\t</Form.Group>\n\t\t\t</Row>\n\t\t\t<Row className=\"d-flex justify-content-center\">\n\t\t\t\t<Col>\n\t\t\t\t\t<Form.Text>Time Complexity: {algorithm.timeComplexity}</Form.Text>\n\t\t\t\t</Col>\n\t\t\t\t<Col>\n\t\t\t\t\t<Form.Text>Space Complexity: {algorithm.spaceComplexity}</Form.Text>\n\t\t\t\t</Col>\n\t\t\t\t<Col>\n\t\t\t\t\t<Form.Text>Traversal Type: {algorithm.traversalType}</Form.Text>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</Form>\n\t);\n};\n\nexport default SearchInfo;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,GAAG,EAAEC,GAAG,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,UAAU,GAAGA,CAAC;EAACC;AAAS,CAAC,KAAK;EACnC,oBACCF,OAAA,CAACJ,IAAI;IAACO,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC5BJ,OAAA,CAACH,GAAG;MAACM,SAAS,EAAC,+BAA+B;MAAAC,QAAA,eAC7CJ,OAAA,CAACJ,IAAI,CAACS,KAAK;QAAAD,QAAA,eACVJ,OAAA,CAACJ,IAAI,CAACU,IAAI;UAAAF,QAAA,gBACTJ,OAAA;YAAAI,QAAA,EAAM;UAAkB;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,8GAGhC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAW;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACNV,OAAA,CAACH,GAAG;MAACM,SAAS,EAAC,+BAA+B;MAAAC,QAAA,gBAC7CJ,OAAA,CAACF,GAAG;QAAAM,QAAA,eACHJ,OAAA,CAACJ,IAAI,CAACU,IAAI;UAAAF,QAAA,GAAC,mBAAiB,EAACF,SAAS,CAACS,cAAc;QAAA;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9D,CAAC,eACNV,OAAA,CAACF,GAAG;QAAAM,QAAA,eACHJ,OAAA,CAACJ,IAAI,CAACU,IAAI;UAAAF,QAAA,GAAC,oBAAkB,EAACF,SAAS,CAACU,eAAe;QAAA;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChE,CAAC,eACNV,OAAA,CAACF,GAAG;QAAAM,QAAA,eACHJ,OAAA,CAACJ,IAAI,CAACU,IAAI;UAAAF,QAAA,GAAC,kBAAgB,EAACF,SAAS,CAACW,aAAa;QAAA;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAET,CAAC;AAACI,EAAA,GAzBIb,UAAU;AA2BhB,eAAeA,UAAU;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}