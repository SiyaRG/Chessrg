{"ast":null,"code":"var _jsxFileName = \"/data/data/com.termux/files/home/storage/projects/siya-app/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Chessboard from \"chessboardjsx\";\nimport { Chess } from \"chess.js\";\nimport \"./Chess.css\";\nimport \"./../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport \"./../node_modules/bootstrap/dist/js/bootstrap.min.js\";\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\nimport MainNav from \"./Components/MainNav.jsx\";\n//App\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [fen, setFen] = useState(\"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\");\n  const [mode, setMode] = useState(\"Multiplayer\");\n  const toggleMode = toMode => {\n    setMode(toMode);\n    chess.reset();\n    setTurn(\"white\");\n    setFen(\"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\");\n  };\n  const chess = new Chess(fen);\n  const [turn, setTurn] = useState(\"white\");\n  const [legalStyles, setLegalStyles] = useState({});\n  const [activeSquare, setActiveSquare] = useState(\"\");\n  const getLegalMoves = csquare => {\n    const legal = chess.moves({\n      square: csquare\n    });\n    const stylesObject = {};\n    Object.assign(stylesObject, {\n      [csquare]: {\n        backgroundColor: \"rgba(1,145,197,0.623)\"\n      }\n    });\n    legal.forEach(move => {\n      Object.assign(stylesObject, {\n        [move.slice(-2)]: {\n          backgroundColor: \"rgba(131,250,157,0.846)\"\n        }\n      });\n    });\n    return stylesObject;\n  };\n  const playMove = async nsquare => {\n    if (activeSquare !== \"\" && chess.moves({\n      square: activeSquare\n    }).length !== 0) {\n      try {\n        chess.move({\n          from: activeSquare,\n          to: nsquare\n        });\n        setFen(chess.fen());\n      } catch (error) {\n        try {\n          chess.move({\n            from: activeSquare,\n            to: nsquare,\n            promotion: \"q\"\n          });\n          setFen(chess.fen());\n        } catch {}\n      }\n      if (mode === \"Multiplayer\") {\n        setTurn(chess.turn() == \"b\" ? \"black\" : \"white\");\n      } else {\n        let bestMove = getStockfishMove(fen);\n        //chess.move(bestMove);\n      }\n      if (chess.inCheck()) {\n        alert(\"check\");\n      }\n      if (chess.isGameOver()) {\n        alert(\"GameOver\");\n      }\n      setActiveSquare(\"\");\n    } else {}\n  };\n  const getStockfishMove = async fenString => {\n    const par = {};\n    par.fen = fenString;\n    par.depth = 13;\n    const query = new URLSearchParams(par);\n    const response = await fetch(`https://stockfish.online/api/s/v2.php?${query.toString()}`, {\n      method: \"GET\"\n    });\n    const res = response.json();\n    if (res.success) {\n      const continuation = res.continuation.split(\" \");\n      alert(continuation);\n      return continuation[0];\n    } else {\n      alert(res.data, 5);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    className: \"min-vh-100 min-vw-100 bg-secondary-subtle overflow-x-hidden p-0\",\n    \"data-bs-theme\": (() => {\n      if (mode === \"Stockfish\") return \"dark\";\n    })(),\n    children: [/*#__PURE__*/_jsxDEV(MainNav, {\n      toggleMode: toggleMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      id: \"mode\",\n      className: \"d-flex text-center mt-3 c\",\n      styles: (() => {\n        if (mode === \"Stockfish\") {\n          return {\n            color: \"rgba(5,195,221,0.666)\"\n          };\n        } else {\n          return {\n            color: \"black\"\n          };\n        }\n      })(),\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: mode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \" mt-3 p-3 d-flex flex-column align-items-center\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        id: \"board\",\n        className: \"m-0 p-0 h-100 \",\n        children: /*#__PURE__*/_jsxDEV(Chessboard, {\n          position: fen,\n          orientation: turn,\n          width: (() => {\n            if (window.innerWidth < 500) {\n              alert(\"small\");\n              return \"300\";\n            } else if (window.innerWidth < 1400) {\n              alert(\"medium\");\n              return \"500\";\n            } else {\n              alert(\"large\");\n              return \"700\";\n            }\n          })(),\n          boardStyle: {\n            boxShadow: \"0 0 .5rem black\",\n            padding: \"0\"\n          },\n          darkSquareStyle: {\n            backgroundColor: \"#11dfef\"\n          },\n          lightSquareStyle: {\n            backgroundColor: \"rgba(255,255,255,0.17)\"\n          },\n          dropSquareStyle: {\n            backgroundColor: \"rgba(0,0,0,0.119)\",\n            boxShadow: \"0 0 .75rem rgb(1,187,197)\"\n          },\n          onSquareClick: square => {\n            setLegalStyles(getLegalMoves(square));\n            setActiveSquare(square);\n            playMove(square);\n          },\n          squareStyles: legalStyles,\n          onMouseOverSquare: square => {\n            setLegalStyles(getLegalMoves(square));\n          },\n          allowDrag: () => {\n            return false;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"d-flex text-center mt-3 justify-content-center\",\n      styles: {\n        color: \"rgba(75,87,89,0.846)\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        id: \"btnReset\",\n        onClick: () => {\n          chess.reset();\n          setTurn(\"white\");\n          setFen(\"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\");\n        },\n        children: \"O\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"TF69txpp9b1P63K8oyY4j9HfdSQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Chessboard","Chess","Container","Row","Col","Button","MainNav","jsxDEV","_jsxDEV","App","_s","fen","setFen","mode","setMode","toggleMode","toMode","chess","reset","setTurn","turn","legalStyles","setLegalStyles","activeSquare","setActiveSquare","getLegalMoves","csquare","legal","moves","square","stylesObject","Object","assign","backgroundColor","forEach","move","slice","playMove","nsquare","length","from","to","error","promotion","bestMove","getStockfishMove","inCheck","alert","isGameOver","fenString","par","depth","query","URLSearchParams","response","fetch","toString","method","res","json","success","continuation","split","data","fluid","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","styles","color","position","orientation","width","window","innerWidth","boardStyle","boxShadow","padding","darkSquareStyle","lightSquareStyle","dropSquareStyle","onSquareClick","squareStyles","onMouseOverSquare","allowDrag","onClick","_c","$RefreshReg$"],"sources":["/data/data/com.termux/files/home/storage/projects/siya-app/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport Chessboard from \"chessboardjsx\";\nimport { Chess } from \"chess.js\";\nimport \"./Chess.css\";\nimport \"./../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport \"./../node_modules/bootstrap/dist/js/bootstrap.min.js\";\n\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\nimport MainNav from \"./Components/MainNav.jsx\";\n//App\nconst App = () => {\n    const [fen, setFen] = useState(\n        \"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\"\n    );\n    const [mode, setMode] = useState(\"Multiplayer\");\n    const toggleMode = toMode => {\n        setMode(toMode);\n        chess.reset();\n        setTurn(\"white\");\n        setFen(\"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\");\n    };\n\n    const chess = new Chess(fen);\n    const [turn, setTurn] = useState(\"white\");\n    const [legalStyles, setLegalStyles] = useState({});\n    const [activeSquare, setActiveSquare] = useState(\"\");\n\n    const getLegalMoves = csquare => {\n        const legal = chess.moves({ square: csquare });\n\n        const stylesObject = {};\n        Object.assign(stylesObject, {\n            [csquare]: { backgroundColor: \"rgba(1,145,197,0.623)\" }\n        });\n        legal.forEach(move => {\n            Object.assign(stylesObject, {\n                [move.slice(-2)]: { backgroundColor: \"rgba(131,250,157,0.846)\" }\n            });\n        });\n\n        return stylesObject;\n    };\n    const playMove = async nsquare => {\n        if (\n            activeSquare !== \"\" &&\n            chess.moves({ square: activeSquare }).length !== 0\n        ) {\n            try {\n                chess.move({ from: activeSquare, to: nsquare });\n                setFen(chess.fen());\n            } catch (error) {\n                try {\n                    chess.move({\n                        from: activeSquare,\n                        to: nsquare,\n                        promotion: \"q\"\n                    });\n                    setFen(chess.fen());\n                } catch {}\n            }\n            if (mode === \"Multiplayer\") {\n                setTurn(chess.turn() == \"b\" ? \"black\" : \"white\");\n            } else {\n                let bestMove = getStockfishMove(fen);\n                //chess.move(bestMove);\n            }\n            if (chess.inCheck()) {\n                alert(\"check\");\n            }\n            if (chess.isGameOver()) {\n                alert(\"GameOver\");\n            }\n\n            setActiveSquare(\"\");\n        } else {\n        }\n    };\n    const getStockfishMove = async fenString => {\n        const par = {};\n        par.fen = fenString;\n        par.depth = 13;\n        const query = new URLSearchParams(par);\n        const response = await fetch(\n            `https://stockfish.online/api/s/v2.php?${query.toString()}`,\n            {\n                method: \"GET\"\n            }\n        );\n        const res = response.json();\n        if (res.success) {\n            const continuation = res.continuation.split(\" \");\n            alert(continuation);\n            return continuation[0];\n        } else {\n          alert(res.data, 5);\n        }\n    };\n    return (\n        <Container\n            fluid\n            className=\"min-vh-100 min-vw-100 bg-secondary-subtle overflow-x-hidden p-0\"\n            data-bs-theme={(() => {\n                if (mode === \"Stockfish\") return \"dark\";\n            })()}\n        >\n            <MainNav toggleMode={toggleMode} />\n            <Row\n                id=\"mode\"\n                className=\"d-flex text-center mt-3 c\"\n                styles={(() => {\n                    if (mode === \"Stockfish\") {\n                        return { color: \"rgba(5,195,221,0.666)\" };\n                    } else {\n                        return { color: \"black\" };\n                    }\n                })()}\n            >\n                <h1>{mode}</h1>\n            </Row>\n            <Row className=\" mt-3 p-3 d-flex flex-column align-items-center\">\n                <Container id=\"board\" className=\"m-0 p-0 h-100 \">\n                    <Chessboard\n                        position={fen}\n                        orientation={turn}\n                        width={(() => {\n                            if (window.innerWidth < 500) {\n                                alert(\"small\");\n                                return \"300\";\n                            } else if (window.innerWidth < 1400) {\n                                alert(\"medium\");\n                                return \"500\";\n                            } else {\n                                alert(\"large\");\n                                return \"700\";\n                            }\n                        })()}\n                        boardStyle={{\n                            boxShadow: \"0 0 .5rem black\",\n                            padding: \"0\"\n                        }}\n                        darkSquareStyle={{ backgroundColor: \"#11dfef\" }}\n                        lightSquareStyle={{\n                            backgroundColor: \"rgba(255,255,255,0.17)\"\n                        }}\n                        dropSquareStyle={{\n                            backgroundColor: \"rgba(0,0,0,0.119)\",\n                            boxShadow: \"0 0 .75rem rgb(1,187,197)\"\n                        }}\n                        onSquareClick={square => {\n                            setLegalStyles(getLegalMoves(square));\n                            setActiveSquare(square);\n                            playMove(square);\n                        }}\n                        squareStyles={legalStyles}\n                        onMouseOverSquare={square => {\n                            setLegalStyles(getLegalMoves(square));\n                        }}\n                        allowDrag={() => {\n                            return false;\n                        }}\n                    />\n                </Container>\n            </Row>\n            <Row\n                className=\"d-flex text-center mt-3 justify-content-center\"\n                styles={{ color: \"rgba(75,87,89,0.846)\" }}\n            >\n                <Button\n                    id=\"btnReset\"\n                    onClick={() => {\n                        chess.reset();\n                        setTurn(\"white\");\n                        setFen(\n                            \"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\"\n                        );\n                    }}\n                >\n                    O\n                </Button>\n            </Row>\n        </Container>\n    );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}